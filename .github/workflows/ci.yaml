name: "A+: CI"

permissions:
  contents: write

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches:
      - main

jobs:
  cargo-build:
    name: Cargo Build
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: cargo build
        run: cargo b --workspace --all-targets --all-features

  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: Rustfmt Check
        run: cargo fmt --all --check

  cargo-clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - name: Clippy Check
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings 

  cargo-test:
    name: Cargo test
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cargo test
        run: cargo test --workspace --all-targets --all-features

  cargo-miri-test:
    name: Cargo miri
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup miri
        run: |
          rustup toolchain install nightly --component miri;
          rustup override set nightly;
          cargo miri setup;

      - name: Test with Miri
        run: cargo miri test --workspace --all-targets --all-features

  typos-cli:
    name: typos
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install Typos
        uses: taiki-e/install-action@v2
        with:
          tool: typos-cli

      - name: run typos
        run: typos

  taplo-toml-fmt:
    
    name: taplo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install Taplo
        uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli

      - name: Run Taplo
        id: taplo
        run: taplo fmt --check --diff

  markdownlint:
    runs-on: ubuntu-latest

    steps:
    - name: Fetch Repository
      uses: actions/checkout@v4

    - name: markdownlint-cli2-action
      uses: DavidAnson/markdownlint-cli2-action@v15
      with:
        globs: '**/*.md'
            
  cargo-deny:
    uses: ./.github/workflows/cargo_deny.yaml

  check-msrv:
    uses: ./.github/workflows/msrv.yaml
